"use strict";(()=>{var e={};e.id=755,e.ids=[755],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},700:(e,t,o)=>{o.r(t),o.d(t,{originalPathname:()=>_,patchFetch:()=>v,requestAsyncStorage:()=>c,routeModule:()=>u,serverHooks:()=>l,staticGenerationAsyncStorage:()=>d});var n={};o.r(n),o.d(n,{POST:()=>p});var r=o(49303),s=o(88716),a=o(60670);let i={daily:{enable_noise_cancellation:!1},anthropic:{model:"claude-3-5-sonnet-20241022"},deepgram:{model:"nova-2-general",language:"en"},openai_tts:{sample_rate:24e3}};async function p(e){let{services:t,config:o}=await e.json();if(!t||!o||!process.env.DAILY_BOTS_URL)return new Response("Services or config not found on request body",{status:400});let n={bot_profile:"vision_2024_08",max_duration:360,service_options:i,services:t,api_keys:{openai:process.env.OPENAI_API_KEY,openai_tts:process.env.OPENAI_API_KEY},config:[...o]},r=await fetch(process.env.DAILY_BOTS_URL,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${process.env.DAILY_API_KEY}`},body:JSON.stringify(n)}),s=await r.json();return 200!==r.status?Response.json(s,{status:r.status}):Response.json(s)}let u=new r.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/route",pathname:"/api",filename:"route",bundlePath:"app/api/route"},resolvedPagePath:"C:\\Users\\fkris\\OneDrive\\Documents\\GitHub\\Apka-mitr\\app\\api\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:c,staticGenerationAsyncStorage:d,serverHooks:l}=u,_="/api/route";function v(){return(0,a.patchFetch)({serverHooks:l,staticGenerationAsyncStorage:d})}},49303:(e,t,o)=>{e.exports=o(30517)}};var t=require("../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),n=t.X(0,[948],()=>o(700));module.exports=n})();